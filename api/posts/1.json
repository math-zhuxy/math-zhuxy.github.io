{"total":28,"pageSize":12,"pageCount":3,"data":[{"title":"ShardCLuster论文","uid":"c11f6dff9acd2825707d631085fa2bf8","slug":"ShardCLuster笔记","date":"2025-02-24T11:21:14.000Z","updated":"2025-02-24T11:22:47.998Z","comments":true,"path":"api/articles/ShardCLuster笔记.json","keywords":null,"cover":null,"text":"账户划分方法 先用数学定义了负载均衡指数和跨分片交易数，转化为一个有限制的优化问题 是一个NP-hard问题，通过启发式算法进行迭代求解：每一轮确定每一个账户的...","permalink":"/post/ShardCLuster笔记","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"论文阅读","slug":"论文阅读","count":2,"path":"api/tags/论文阅读.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"图的题型","uid":"dfbf37fa585711a4e94701b80301a90f","slug":"图的题型","date":"2024-12-12T07:26:32.000Z","updated":"2024-12-30T12:20:11.999Z","comments":true,"path":"api/articles/图的题型.json","keywords":null,"cover":null,"text":"求连通/求环 方法：并查集 每次读入边的两个顶点，如果读入之前已经连通，则读入之后必成环，将这两个顶点的祖先设置为一样。 判断图是否连通：遍历i，如果i的祖先和...","permalink":"/post/图的题型","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":19,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"树的重心","uid":"1c68c4c6292c8722814869e400bb03aa","slug":"树的中心","date":"2024-12-12T03:12:20.166Z","updated":"2024-12-12T04:26:54.202Z","comments":true,"path":"api/articles/树的中心.json","keywords":null,"cover":null,"text":"树的存储–邻接表 有向图：a->b 无向图：a - b = a->b + b->a无向图可以看作特殊的有向图 邻接表的存储 对每个节点开一个单链表，单链表存储这...","permalink":"/post/树的中心","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":19,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Floyd算法","uid":"5b2f2da499f30070340fcf72de54a855","slug":"Floyd","date":"2024-12-04T01:27:11.000Z","updated":"2024-12-04T01:35:33.665Z","comments":true,"path":"api/articles/Floyd.json","keywords":null,"cover":null,"text":"floyd算法可以求图中任意两个点距离的最小值假设图中已经考虑k-1个点了，而且目前已经知道所有从i到j的最短路径的距离，存储在d[i][j]中现在多考虑第k个...","permalink":"/post/Floyd","photos":[],"count_time":{"symbolsCount":470,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":19,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"判断图性质","uid":"ff99d5ab0c710b240116f70bc14ad082","slug":"判断图性质","date":"2024-11-29T08:40:22.000Z","updated":"2024-12-29T12:14:42.499Z","comments":true,"path":"api/articles/判断图性质.json","keywords":null,"cover":null,"text":"判断是否连通DFS法：如果要判断两个点是否连通，只需要对这两个点进行DFS遍历，同时标记所有走过的节点，假如走到一个已经标记过的节点，则这两个点连通并查集法：将...","permalink":"/post/判断图性质","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":19,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"不同形态二叉树","uid":"9b21adb62cab940774eff10a8ca336dc","slug":"不同形态二叉树","date":"2024-11-23T10:49:25.000Z","updated":"2024-11-23T10:49:13.874Z","comments":true,"path":"api/articles/不同形态二叉树.json","keywords":null,"cover":null,"text":"题目描述给定前序遍历和后序遍历的顺序，求出总共有多少棵不同形态的二叉树满足这样的遍历顺序。 输入格式整个输入有两行，第一行给出前序遍历的访问顺序，第二行给出后序...","permalink":"/post/不同形态二叉树","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"例题","slug":"例题","count":1,"path":"api/tags/例题.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"常见模板","uid":"5eedc39c4343d9a40153c05972544dcd","slug":"常见模板","date":"2024-11-21T08:24:29.000Z","updated":"2024-12-29T12:14:25.467Z","comments":true,"path":"api/articles/常见模板.json","keywords":null,"cover":null,"text":"并查集123456const int N = 10010;int p[N];int find(int x){ if(x!=p[x])p[x]=find(p[x]...","permalink":"/post/常见模板","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":19,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MST","uid":"ac69b4c1992072269abea91444d26b98","slug":"MST","date":"2024-11-21T01:56:04.000Z","updated":"2024-11-21T08:21:55.038Z","comments":true,"path":"api/articles/MST.json","keywords":null,"cover":null,"text":"MST定义设 $G=(V,E)$ 是一个无向连通图，$E$ 中的每个权值 $c(u,v)$ ，称为 $(u,v)$ 的边长。图 $G$ 的生成树( $n-1$ ...","permalink":"/post/MST","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":19,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"PowerInfer论文","uid":"1150f8d04ea2174e83f737731d4cd296","slug":"powerinfer论文","date":"2024-11-19T12:30:31.000Z","updated":"2024-11-30T03:00:13.521Z","comments":true,"path":"api/articles/powerinfer论文.json","keywords":null,"cover":[],"text":"论文原文链接论文github链接 论文结构1. 引言 讨论了当前大语言模型的推理需求与挑战，尤其是在消费级GPU上运行模型的难点： 大语言模型的内存需求巨大，远...","permalink":"/post/powerinfer论文","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"论文阅读","slug":"论文阅读","count":2,"path":"api/tags/论文阅读.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"配置极光主题","uid":"a8b6b9bbf4052440f27a448efb8e5b47","slug":"极光主题配置","date":"2024-11-17T14:44:01.000Z","updated":"2024-11-17T15:09:08.459Z","comments":true,"path":"api/articles/极光主题配置.json","keywords":null,"cover":null,"text":"下载HEXO首先要先下载npm，在Node.js官网下载LTS版本到本地。下载好后，在命令行中输入： 1npm -v 来查看版本如果之前已经下载过了，但是版本落...","permalink":"/post/极光主题配置","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"配置","slug":"配置","count":2,"path":"api/tags/配置.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"哈夫曼树","uid":"fa96493f1be9ea4e62c8ce720d007a3f","slug":"哈夫曼树","date":"2024-11-16T06:48:22.000Z","updated":"2024-11-16T07:08:32.332Z","comments":true,"path":"api/articles/哈夫曼树.json","keywords":null,"cover":null,"text":"基本概念 路径:从树中一个结点到另一个结点之间的分支构成这两个结点间的路径。 结点的路径长度:两结点间路径上的分支数。 树的路径长度：从树根到每一个结点的路径长...","permalink":"/post/哈夫曼树","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":19,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"配置QT","uid":"be74305dcdfd13488949087b92f952ec","slug":"配置QT","date":"2024-11-15T11:49:10.000Z","updated":"2024-11-17T14:41:36.115Z","comments":true,"path":"api/articles/配置QT.json","keywords":null,"cover":null,"text":"刚刚成功在QT上配置了安卓开发系统，顺便写一个教程吧。 开发环境配置安卓系统开发需要三个东西：JDK，SDK，NDK。首先JDK直接从官网下下来就可以了，下载好...","permalink":"/post/配置QT","photos":[],"count_time":{"symbolsCount":724,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"配置","slug":"配置","count":2,"path":"api/tags/配置.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}