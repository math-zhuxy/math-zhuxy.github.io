[{"id":"cdfc7cbbb7cbed062094116ffd80f917","title":"DFS","content":"DFS和BFS简介DFS和BFS一样属于一种树的遍历方式。基本框架如下：\n1234567891011121314151617#include&lt;iostream&gt;using namespace stdvoid dfs(Node a)&#123;    if(a==NULL)return;    //标记该节点为已用    a.used=true;    //a节点处理    if(check(a))&#123;        printf(&quot;get answer&quot;);        return;    &#125;    //遍历该节点的其他相邻节点    dfs(a.next_1);    dfs(a.next_2);    //...    //回溯，标记该节点为未用状态    a.used=false;\n为什么要回溯以上面的代码为例，如果代码已经运行到a.used=false;这一行，代表前面的dfs(a.next_1);dfs(a.next_2);都没有找到结果，证明走到a节点其实是找不到结果的，因此需要回退会a节点的父节点继续寻找，此时要标记a节点为为使用状态。\nDFS遍历顺序假设有一棵树结构如下：以上面的代码为例，假设L点满足我们的要求遍历路径如下：A-&gt;B-&gt;E-&gt;J-&gt;回溯(E)-&gt;回溯(B)-&gt;B-&gt;F-&gt;回溯(A)-&gt;C-&gt;G-&gt;K-&gt;回溯(G)-&gt;G-&gt;L-&gt;符合答案，输出下面给出几道常见的DFS题目：\nN皇后问题皇后问题是指将 n个皇后放在 n×n 的国际象棋棋盘上，使得皇后不能相互攻击到，即任意两个皇后都不能处于同一行、同一列或同一斜线上。现在给定整数N ，请你输出所有的满足条件的棋子摆法。代码如下：\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include&lt;iostream&gt;using namespace std;bool Arr[20][20];int n;int DirX[4]=&#123;1,1,-1,-1&#125;;int DirY[4]=&#123;1,-1,1,-1&#125;;bool IsOk(int x,int y)&#123;    for(int i=1;i&lt;=n;i++)&#123;        if(Arr[i][y])return false;    &#125;    int k,q;    for(int i=0;i&lt;4;i++)&#123;        k=x;        q=y;        while(k&gt;=1&amp;&amp;k&lt;=n&amp;&amp;q&gt;=1&amp;&amp;q&lt;=n)&#123;            if(Arr[k][q])return false;            k+=DirX[i];            q+=DirY[i];        &#125;    &#125;    return true;&#125;void dfs(int num)&#123;    if(num&gt;n)&#123;        for(int i=1;i&lt;num;i++)&#123;            for(int j=1;j&lt;num;j++)&#123;                if(Arr[i][j])printf(&quot;Q&quot;);                else printf(&quot;.&quot;);            &#125;            printf(&quot;\\n&quot;);        &#125;        printf(&quot;\\n&quot;);        return;    &#125;    for(int j=1;j&lt;=n;j++)&#123;        if(IsOk(num,j))&#123;            Arr[num][j]=true;            dfs(num+1);            Arr[num][j]=false;        &#125;    &#125;&#125;int main()&#123;    scanf(&quot;%d&quot;, &amp;n);    dfs(1);&#125;\n","slug":"DFS","date":"2024-10-12T04:56:45.000Z","categories_index":"","tags_index":"","author_index":"Math-zhuxy"},{"id":"07311a8ec5a05f13261d3a44658af323","title":"欢迎","content":"网站简介这是我自己做的一个博客网站。博客框架是hexo，用来github提供的域名。\n","slug":"welcome","date":"2024-10-12T03:00:46.000Z","categories_index":"","tags_index":"网站简介","author_index":"Math-zhuxy"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2024-10-12T02:36:20.905Z","categories_index":"","tags_index":"","author_index":"Math-zhuxy"}]