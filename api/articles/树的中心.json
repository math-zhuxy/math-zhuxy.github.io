{"title":"树的重心","uid":"1c68c4c6292c8722814869e400bb03aa","slug":"树的中心","date":"2024-12-12T03:12:20.166Z","updated":"2024-12-12T04:26:24.741Z","comments":true,"path":"api/articles/树的中心.json","keywords":null,"cover":null,"content":"<h1 id=\"树的存储–邻接表\"><a href=\"#树的存储–邻接表\" class=\"headerlink\" title=\"树的存储–邻接表\"></a>树的存储–邻接表</h1><ul>\n<li>有向图：a-&gt;b</li>\n<li>无向图：a - b &#x3D; a-&gt;b + b-&gt;a<br><strong>无向图可以看作特殊的有向图</strong></li>\n</ul>\n<hr>\n<p>邻接表的存储</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对每个节点开一个单链表，单链表存储这个节点可以走到哪个点</p></blockquote>\n<p>输入：<br>第一行包含整数n，表示树的节点数<br>接下来n-1行，每行包含两个整数a和b，表示a和b存在一条边</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> h[N], e[N], ne[N], idx=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">h[]：头指针</span></span><br><span class=\"line\"><span class=\"comment\">e[]：该位置节点的值</span></span><br><span class=\"line\"><span class=\"comment\">ne[]：该位置节点的下一个指针</span></span><br><span class=\"line\"><span class=\"comment\">idx：插入的第几个节点，也可以表示插入的点对应的指针</span></span><br><span class=\"line\"><span class=\"comment\">单链表中，指针用第i个节点表示</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 单链表中是头指针为-1，这里需要所有头指针都为-1</span></span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(h, <span class=\"number\">-1</span>, <span class=\"built_in\">sizeof</span>(h));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里采用头插法，</span></span><br><span class=\"line\">    <span class=\"comment\">//将插入的第idx个点赋值为b </span></span><br><span class=\"line\">    e[idx] = b;</span><br><span class=\"line\">    <span class=\"comment\">//插入的第idx个点的next指针指向头</span></span><br><span class=\"line\">    ne[idx] = h[a];</span><br><span class=\"line\">    <span class=\"comment\">//头指针变成idx，同时idx自增为下一个点预留空间</span></span><br><span class=\"line\">    h[a]= idx ++;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<h1 id=\"题目及解答\"><a href=\"#题目及解答\" class=\"headerlink\" title=\"题目及解答\"></a>题目及解答</h1><p>给定一颗树，树中包含 n 个结点（编号 1∼n）和 n−1 条无向边。</p>\n<p>请你找到树的重心，并输出将重心删除后，剩余各个连通块中点数的最大值。</p>\n<p>重心定义：重心是指树中的一个结点，如果将这个点删除后，剩余各个连通块中点数的最大值最小，那么这个节点被称为树的重心。</p>\n<p>输入格式：</p>\n<ul>\n<li><p>第一行包含整数 n，表示树的结点数。</p>\n</li>\n<li><p>接下来 n−1行，每行包含两个整数 a 和 b，表示点 a 和点 b 之间存在一条边。</p>\n</li>\n</ul>\n<p>输出格式</p>\n<ul>\n<li>输出一个整数 m，表示将重心删除后，剩余各个连通块中点数的最大值。<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N=<span class=\"number\">1e5</span><span class=\"number\">+10</span></span><br><span class=\"line\"><span class=\"type\">int</span> q[N],d[N],h[N], e[N], ne[N], idx;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    q表示队列，d表示该节点距离树根的距离</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里采用头插法，</span></span><br><span class=\"line\">    <span class=\"comment\">//将插入的第idx个点赋值为b </span></span><br><span class=\"line\">    e[idx] = b;</span><br><span class=\"line\">    <span class=\"comment\">//插入的第idx个点的next指针指向头</span></span><br><span class=\"line\">    ne[idx] = h[a];</span><br><span class=\"line\">    <span class=\"comment\">//头指针变成idx，同时idx自增为下一个点预留空间</span></span><br><span class=\"line\">    h[a]= idx ++;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> hh=<span class=\"number\">0</span>, tt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    q[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(d,<span class=\"number\">-1</span>,<span class=\"built_in\">sizeof</span>(d));</span><br><span class=\"line\">    d[<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(hh&lt;=tt)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t=q[hh++];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=h[t];i!=<span class=\"number\">-1</span>;i=ne[i])&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> j=e[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(d[j]==<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                d[j]=d[t]<span class=\"number\">+1</span>;</span><br><span class=\"line\">                q[++tt]=j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> d[n];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(h,<span class=\"number\">-1</span>,<span class=\"built_in\">sizeof</span>(h));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> a,b;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class=\"line\">        <span class=\"built_in\">add</span>(a,b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,<span class=\"built_in\">bfs</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","feature":true,"text":"树的存储–邻接表 有向图：a->b 无向图：a - b = a->b + b->a无向图可以看作特殊的有向图 邻接表的存储 对每个节点开一个单链表，单链表存储这...","permalink":"/post/树的中心","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":18,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A0%91%E7%9A%84%E5%AD%98%E5%82%A8%E2%80%93%E9%82%BB%E6%8E%A5%E8%A1%A8\"><span class=\"toc-text\">树的存储–邻接表</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E5%8F%8A%E8%A7%A3%E7%AD%94\"><span class=\"toc-text\">题目及解答</span></a></li></ol>","author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"算法模板","date":"2024-12-08T04:23:28.059Z","updated":"2024-12-08T04:23:28.059Z","comments":true,"path":"api/articles/算法模板.json","keywords":null,"cover":null,"text":"","permalink":"/post/算法模板","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}