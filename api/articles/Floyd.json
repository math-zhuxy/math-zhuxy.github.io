{"title":"Floyd算法","uid":"5b2f2da499f30070340fcf72de54a855","slug":"Floyd","date":"2024-12-04T01:27:11.000Z","updated":"2024-12-04T01:35:33.665Z","comments":true,"path":"api/articles/Floyd.json","keywords":null,"cover":null,"content":"<p>floyd算法可以求图中任意两个点距离的最小值<br>假设图中已经考虑k-1个点了，而且目前已经知道所有从i到j的最短路径的距离，存储在d[i][j]中<br>现在多考虑第k个点：<br>假设i走到k，再从k走到j的距离比d[i][j]小，则更新；否则则保持<br>遍历k从1到n，不断更新d[i][j]，更新完所有顶点即可。</p>\n<p>设顶点集S，以及权值集：A[i][j]：<br>初始时：S&#x3D;{}<br>A[i][j]&#x3D;</p>\n<ul>\n<li>0: i&#x3D;&#x3D;j</li>\n<li>wij: i!&#x3D;j,边存在</li>\n<li>INF i!&#x3D;j,边不存在<br>每次增加一个新的点，A[i][j]&#x3D;min(A[i][k]+A[k][j],A[i][j])<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= n; k ++ )</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ )</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j ++ )</span><br><span class=\"line\">            d[i][j] = <span class=\"built_in\">min</span>(d[i][j], d[i][k] + d[k][j]);</span><br></pre></td></tr></table></figure></li>\n</ul>\n","feature":true,"text":"floyd算法可以求图中任意两个点距离的最小值假设图中已经考虑k-1个点了，而且目前已经知道所有从i到j的最短路径的距离，存储在d[i][j]中现在多考虑第k个...","permalink":"/post/Floyd","photos":[],"count_time":{"symbolsCount":470,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":18,"path":"api/tags/算法.json"}],"toc":"","author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"算法模板","date":"2024-12-08T04:23:28.059Z","updated":"2024-12-08T04:23:28.059Z","comments":true,"path":"api/articles/算法模板.json","keywords":null,"cover":null,"text":"","permalink":"/post/算法模板","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"判断图性质","uid":"ff99d5ab0c710b240116f70bc14ad082","slug":"判断图性质","date":"2024-11-29T08:40:22.000Z","updated":"2024-11-30T03:03:54.743Z","comments":true,"path":"api/articles/判断图性质.json","keywords":null,"cover":null,"text":"判断是否连通DFS法：如果要判断两个点是否连通，只需要对这两个点进行DFS遍历，同时标记所有走过的节点，假如走到一个已经标记过的节点，则这两个点连通并查集法：将...","permalink":"/post/判断图性质","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":18,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}