{"title":"ShardCutter论文","uid":"c257d65f82968a836d529d5055d4a3e8","slug":"ShardCutter笔记","date":"2025-02-24T11:21:14.000Z","updated":"2025-04-03T06:31:14.632Z","comments":true,"path":"api/articles/ShardCutter笔记.json","keywords":null,"cover":null,"content":"<h2 id=\"账户划分方法\"><a href=\"#账户划分方法\" class=\"headerlink\" title=\"账户划分方法\"></a>账户划分方法</h2><ul>\n<li>先用数学定义了负载均衡指数和跨分片交易数，转化为一个有限制的优化问题</li>\n<li>是一个NP-hard问题，通过启发式算法进行迭代求解：每一轮确定每一个账户的最优分片，类似贪心。</li>\n</ul>\n<h2 id=\"账户迁移机制\"><a href=\"#账户迁移机制\" class=\"headerlink\" title=\"账户迁移机制\"></a>账户迁移机制</h2><h3 id=\"Stage-1-发起迁移请求\"><a href=\"#Stage-1-发起迁移请求\" class=\"headerlink\" title=\"Stage 1: 发起迁移请求\"></a>Stage 1: 发起迁移请求</h3><ul>\n<li><strong>发起迁移</strong>：当M-shard决定对某账户进行迁移时，它会发送一个名为TXaux1的辅助交易到源分片。TXaux1包含以下字段：<ul>\n<li><code>Addr</code>：目标账户地址。</li>\n<li><code>Source</code>：当前账户所在的分片。</li>\n<li><code>Dest.</code>：目标分片。</li>\n<li><code>τ</code>：迁移操作的时间限制。</li>\n</ul>\n</li>\n<li><strong>更新状态</strong>：源分片在达成共识后不会直接将账户映射到目标分片，而是将目标账户的状态中的Location字段更新为”To Dest. Shard”。同时锁定该账户相关的payer交易，但允许payee交易继续处理。</li>\n<li><strong>发送TXaux2</strong>：然后向目标分片发送TXaux2，其结构包括TXaux1、目标账户的状态、源分片中包含TXaux1的区块高度H及其对应的Merkle证明。</li>\n</ul>\n<h3 id=\"Stage-2-目标分片验证\"><a href=\"#Stage-2-目标分片验证\" class=\"headerlink\" title=\"Stage 2: 目标分片验证\"></a>Stage 2: 目标分片验证</h3><ul>\n<li><strong>验证过程</strong>：在将TXaux2打包进区块之前，目标分片需执行三步验证来确保其合法性：<ul>\n<li>检查时间限制是否已过期。</li>\n<li>使用Merkle证明MPaux1确认TXaux1是否存储在源分片的区块H中。</li>\n<li>验证目标账户的状态，并使用MPstate确认其在同一区块H中的存在性。</li>\n</ul>\n</li>\n<li><strong>成功与失败处理</strong>：如果所有验证均通过，目标分片将提交TXaux2并更新目标账户状态中的Location字段为”Dest. Shard”，记录账户余额值value1，并广播TXann通知所有分片账户迁移成功。若验证失败，则通知源分片回退操作。</li>\n</ul>\n<h3 id=\"Stage-3-源分片响应\"><a href=\"#Stage-3-源分片响应\" class=\"headerlink\" title=\"Stage 3: 源分片响应\"></a>Stage 3: 源分片响应</h3><ul>\n<li><strong>共识达成</strong>：收到迁移成功的通知后，源分片会在其内部达成共识，并将目标账户状态中的Location字段更新为”Dest. Shard”，此时源分片将不会处理任何交易。</li>\n<li><strong>发送最新状态</strong>：接着，源分片将最新的目标账户状态及锁定的payer交易发送给目标分片，这些信息被打包成TXns交易。</li>\n</ul>\n<h3 id=\"Stage-4-处理待定交易\"><a href=\"#Stage-4-处理待定交易\" class=\"headerlink\" title=\"Stage 4: 处理待定交易\"></a>Stage 4: 处理待定交易</h3><ul>\n<li><strong>更新余额</strong>：目标分片在达成共识后首先记录余额值value2，然后根据∆&#x3D; value2−value1调整账户状态中的余额。</li>\n<li><strong>处理待定交易</strong>：最后，源分片发送过来的待定交易被放入目标分片的交易池中等待进一步处理。</li>\n</ul>\n<h2 id=\"账户转移失败和攻击\"><a href=\"#账户转移失败和攻击\" class=\"headerlink\" title=\"账户转移失败和攻击\"></a>账户转移失败和攻击</h2><h3 id=\"类型1：源分片和目标分片同时超时\"><a href=\"#类型1：源分片和目标分片同时超时\" class=\"headerlink\" title=\"类型1：源分片和目标分片同时超时\"></a>类型1：源分片和目标分片同时超时</h3><p><strong>描述和解决方法</strong>：</p>\n<ul>\n<li>TXaux2未能在设定的迁移窗口（τ）内到达目标分片（Dest. Shard）。在这种情况下，目标分片无法验证并接受该账户。</li>\n<li>源分片（Source Shard）源分片在迁移窗口 τ 内不会收到成功公告，视为到迁移失败，将解锁目标账户并将锁定的交易放入交易池中。</li>\n</ul>\n<h3 id=\"类型2：广播延迟导致的账户重复\"><a href=\"#类型2：广播延迟导致的账户重复\" class=\"headerlink\" title=\"类型2：广播延迟导致的账户重复\"></a>类型2：广播延迟导致的账户重复</h3><p><strong>描述</strong>：</p>\n<ul>\n<li>尽管TXaux2及时到达目标分片，并成功进行了验证和广播（TXann），但由于传播延迟，TXann可能在迁移窗口τ到期之后才到达源分片。</li>\n<li>在此期间，源分片可能会认为迁移失败而提前解锁目标账户，结果造成该账户同时存在于两个分片中，违反了一个账户只能由一个分片管理的基本原则。</li>\n</ul>\n<p><strong>解决方法</strong>：<br>在迁移窗口τ到期时，源分片不会直接解锁目标账户，而是应主动向目标分片发起查询，确认迁移是否成功完成。只有在收到目标分片的确切反馈后，才能决定是否解锁账户。</p>\n<h3 id=\"重放攻击\"><a href=\"#重放攻击\" class=\"headerlink\" title=\"重放攻击\"></a>重放攻击</h3><p><strong>描述</strong><br>在目标分片广播TXann到源分片接收TXann这个过程中。攻击者发送同样的Relay TX到目标分片和源分片，则收款操作将会执行两次（源分片，目标分片都认为可以执行这个操作）</p>\n<p><strong>解决方法</strong><br>重构TX格式：引入了两个新的属性：Staterec和MPrec。<br>付款人分片在发送到收款人分片的TX中包含Location字段，表示在付款人分片中的收款人状态。</p>\n<ul>\n<li><p>假如此时付款人分片没有接收到收款人目标分片的TXann。此时在付款人分片的收款人Location状态为Source.shard，那么目标分片就会拒绝这笔交易。</p>\n</li>\n<li><p>假如此时付款人分片接收到收款人目标分片的TXann，那么此时付款人分片的收款人Location状态为Dest.shard，那么源分片就会拒绝这笔交易。</p>\n</li>\n</ul>\n<p>（这段分析论文没有）</p>\n","feature":true,"text":"账户划分方法 先用数学定义了负载均衡指数和跨分片交易数，转化为一个有限制的优化问题 是一个NP-hard问题，通过启发式算法进行迭代求解：每一轮确定每一个账户的...","permalink":"/post/ShardCutter笔记","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"论文阅读","slug":"论文阅读","count":2,"path":"api/tags/论文阅读.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%A6%E6%88%B7%E5%88%92%E5%88%86%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">账户划分方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%A6%E6%88%B7%E8%BF%81%E7%A7%BB%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">账户迁移机制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stage-1-%E5%8F%91%E8%B5%B7%E8%BF%81%E7%A7%BB%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">Stage 1: 发起迁移请求</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stage-2-%E7%9B%AE%E6%A0%87%E5%88%86%E7%89%87%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">Stage 2: 目标分片验证</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stage-3-%E6%BA%90%E5%88%86%E7%89%87%E5%93%8D%E5%BA%94\"><span class=\"toc-text\">Stage 3: 源分片响应</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stage-4-%E5%A4%84%E7%90%86%E5%BE%85%E5%AE%9A%E4%BA%A4%E6%98%93\"><span class=\"toc-text\">Stage 4: 处理待定交易</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%A6%E6%88%B7%E8%BD%AC%E7%A7%BB%E5%A4%B1%E8%B4%A5%E5%92%8C%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">账户转移失败和攻击</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B1%EF%BC%9A%E6%BA%90%E5%88%86%E7%89%87%E5%92%8C%E7%9B%AE%E6%A0%87%E5%88%86%E7%89%87%E5%90%8C%E6%97%B6%E8%B6%85%E6%97%B6\"><span class=\"toc-text\">类型1：源分片和目标分片同时超时</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B2%EF%BC%9A%E5%B9%BF%E6%92%AD%E5%BB%B6%E8%BF%9F%E5%AF%BC%E8%87%B4%E7%9A%84%E8%B4%A6%E6%88%B7%E9%87%8D%E5%A4%8D\"><span class=\"toc-text\">类型2：广播延迟导致的账户重复</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%8D%E6%94%BE%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">重放攻击</span></a></li></ol></li></ol>","author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"图的题型","uid":"dfbf37fa585711a4e94701b80301a90f","slug":"图的题型","date":"2024-12-12T07:26:32.000Z","updated":"2024-12-30T12:20:11.999Z","comments":true,"path":"api/articles/图的题型.json","keywords":null,"cover":null,"text":"求连通/求环 方法：并查集 每次读入边的两个顶点，如果读入之前已经连通，则读入之后必成环，将这两个顶点的祖先设置为一样。 判断图是否连通：遍历i，如果i的祖先和...","permalink":"/post/图的题型","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":19,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}