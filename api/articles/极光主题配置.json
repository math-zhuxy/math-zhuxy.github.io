{"title":"配置极光主题","uid":"a8b6b9bbf4052440f27a448efb8e5b47","slug":"极光主题配置","date":"2024-11-17T14:44:01.000Z","updated":"2024-11-17T15:09:08.459Z","comments":true,"path":"api/articles/极光主题配置.json","keywords":null,"cover":null,"content":"<h1 id=\"下载HEXO\"><a href=\"#下载HEXO\" class=\"headerlink\" title=\"下载HEXO\"></a>下载HEXO</h1><p>首先要先下载npm，在Node.js官网下载LTS版本到本地。下载好后，在命令行中输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p>来查看版本<br>如果之前已经下载过了，但是版本落后，可以输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install npm@latest -g</span><br></pre></td></tr></table></figure>\n<p>来更新至最新版本<br>接下来安装HEXO框架，输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>常见命令如下：<br>查看版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<p>创建一个项目 hexo-blog 并初始化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init hexo-blog</span><br><span class=\"line\">cd hexo-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>本地启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<h1 id=\"极光主题\"><a href=\"#极光主题\" class=\"headerlink\" title=\"极光主题\"></a>极光主题</h1><p>在控制台中，进入 Hexo 项目的根目录，然后运行以下命令安装主题</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-theme-aurora hexo-plugin-aurora --save</span><br></pre></td></tr></table></figure>\n<p>因为主题是使用 NPM 或者 Yarn 安装的，而不是 clone 到 themes 文件夹的。所以我们需要自己创建一个配置文件。因此需要在 Hexo 博客的根目录下创建一个 _config.aurora.yml 配置文件来配置主题。<br>打开在 Hexo 根目录下的 _config.yml，把 theme 的值改为 aurora</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"line\">## Themes: https://hexo.io/themes/</span><br><span class=\"line\">theme: aurora</span><br></pre></td></tr></table></figure>\n<p>因为使用了 Vue-router，Hexo 默认生成的页面和文章的 permalink 与我们 Vue router 中的 path 是不相符的，那么就会出现无法访问的问题，所以我们需要修改 Hexo 默认配置文件里面的 permalink 参数。修改后结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># URL</span><br><span class=\"line\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class=\"line\">url: https://tridiamond.tech</span><br><span class=\"line\">permalink: /post/:title.html</span><br><span class=\"line\">permalink_defaults:</span><br><span class=\"line\">pretty_urls:</span><br><span class=\"line\">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class=\"line\">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Git-talk\"><a href=\"#Git-talk\" class=\"headerlink\" title=\"Git talk\"></a>Git talk</h1><p>git talk配置相关属性说明：</p>\n<ol>\n<li>enable：使用true开启, 使用false关闭</li>\n<li>autoExpand：如果设置为true, Github 评论将会自动展开。否者默认会收起。</li>\n<li>clientID：clientID 是你 GitHub 的 Oauth APP 中提供的。</li>\n<li>clientSecret：clientSecret 是你 GitHub 的 Oauth APP 中提供的。</li>\n<li>repo：仓库名</li>\n<li>owner：仓库拥有者的用户名</li>\n<li>admin：仓库管理员的用户名，这里可以填写多个管理员。(也用于标记那个评论是博主的)</li>\n<li>id：确保唯一性和长度小于 50，如果您使用pathname，请确保长度小于 50 个字符或使用uid代替，这个有更好的兼容性 (如果您之前使用其他主题，谁用 uid 将可能无法显示您之前的评论)</li>\n<li>language：使用 en 设置为英文，使用 cn 设置为中文.</li>\n<li>distractionFreeMode：与 Facebook 一样的专注模式，点击评论输入框时会让背景变暗。true 来开启 false 来关闭</li>\n<li>recentComment：是否开启最近评论功能。</li>\n<li>proxy：GitHub 授权请求的反向代理</li>\n</ol>\n<p>由于Gitalk配置proxy的默认地址被墙了，导致无法登录，因此需要手动写一个后台接口，注意谷歌浏览器的CORS协议：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_cors <span class=\"keyword\">import</span> CORS</span><br><span class=\"line\"></span><br><span class=\"line\">server = flask.Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">CORS(server, resources=<span class=\"string\">r&#x27;/*&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">client_id = <span class=\"string\">&quot;你自己的&quot;</span></span><br><span class=\"line\">client_secret = <span class=\"string\">&quot;你自己的&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@server.post(<span class=\"params\"><span class=\"string\">&#x27;/get_access_token&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_access_token</span>():</span><br><span class=\"line\">    url = <span class=\"string\">&#x27;https://github.com/login/oauth/access_token&#x27;</span></span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;client_id&#x27;</span>: client_id,</span><br><span class=\"line\">        <span class=\"string\">&#x27;client_secret&#x27;</span>: client_secret,</span><br><span class=\"line\">        <span class=\"string\">&#x27;code&#x27;</span>: flask.request.json[<span class=\"string\">&#x27;code&#x27;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;accept&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    result = requests.post(url=url, params=params, headers=headers, verify=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.json()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    server.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">8011</span>, debug=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n","text":"下载HEXO首先要先下载npm，在Node.js官网下载LTS版本到本地。下载好后，在命令行中输入： 1npm -v 来查看版本如果之前已经下载过了，但是版本落...","permalink":"/post/极光主题配置","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"配置","slug":"配置","count":2,"path":"api/tags/配置.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E8%BD%BDHEXO\"><span class=\"toc-text\">下载HEXO</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%85%89%E4%B8%BB%E9%A2%98\"><span class=\"toc-text\">极光主题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Git-talk\"><span class=\"toc-text\">Git talk</span></a></li></ol>","author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"PowerInfer论文","uid":"1150f8d04ea2174e83f737731d4cd296","slug":"powerinfer论文","date":"2024-11-19T12:30:31.000Z","updated":"2024-11-19T14:22:04.803Z","comments":true,"path":"api/articles/powerinfer论文.json","keywords":null,"cover":null,"text":"论文原文链接 论文核心内容 目标解决在消费级GPU上高效运行LLM的问题，特别是模型的高显存需求对现有硬件的限制。 核心思想利用LLM推理过程中神经元激活的稀疏...","permalink":"/post/powerinfer论文","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"论文阅读","slug":"论文阅读","count":1,"path":"api/tags/论文阅读.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"哈夫曼树","uid":"fa96493f1be9ea4e62c8ce720d007a3f","slug":"哈夫曼树","date":"2024-11-16T06:48:22.000Z","updated":"2024-11-16T07:08:32.332Z","comments":true,"path":"api/articles/哈夫曼树.json","keywords":null,"cover":null,"text":"基本概念 路径:从树中一个结点到另一个结点之间的分支构成这两个结点间的路径。 结点的路径长度:两结点间路径上的分支数。 树的路径长度：从树根到每一个结点的路径长...","permalink":"/post/哈夫曼树","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"算法","slug":"算法","count":15,"path":"api/tags/算法.json"}],"author":{"name":"Math-zhuxy","slug":"blog-author","avatar":"https://sse-market-source-1320172928.cos.ap-guangzhou.myqcloud.com/src/images/uploads/1728918801765528128_%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241014222719.jpg","link":"/","description":"Blood of the First Men, drawn by the sword.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}